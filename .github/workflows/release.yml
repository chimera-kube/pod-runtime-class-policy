on:
  push:
    branches:
    - main
    tags:
    - 'v*'

name: publish Wasm module

jobs:
  build:
    name: Create new release with the Wasm artifact
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: Download wasm-to-oci
        uses: i3h/download-release-asset@v1
        with:
          owner: engineerd
          repo: wasm-to-oci
          tag: v0.1.1
          file: linux-amd64-wasm-to-oci
      -
        name: fix wasm-to-oci permissions
        run: |
          chmod 755 linux-amd64-wasm-to-oci
      -
        name: Build release
        uses: swiftwasm/swiftwasm-action@v5.3
        with:
          shell-action: swift build -c release --triple wasm32-unknown-wasi --build-path build
      -
        name: Wasm strip
        uses: swiftwasm/swiftwasm-action@v5.3
        with:
          shell-action: wasm-strip build/wasm32-unknown-wasi/release/policy.wasm
      -
        name: Wasm optimize
        uses: swiftwasm/swiftwasm-action@v5.3
        with:
          shell-action: wasm-opt -Os build/wasm32-unknown-wasi/release/policy.wasm -o policy.wasm
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      -
        name: Publish Wasm policy artifact to OCI registry with the 'latest' tag
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          ./linux-amd64-wasm-to-oci push policy.wasm ghcr.io/chimera-kube/policies/pod-runtime:latest
      -
        name: Publish Wasm policy artifact to OCI registry with the version tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          export OCI_TAG=$(echo $GITHUB_REF | sed -e "s|refs/tags/||")
          ./linux-amd64-wasm-to-oci push policy.wasm ghcr.io/chimera-kube/policies/pod-runtime:${OCI_TAG}
      -
        name: Create Release
        id: create_release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      -
        name: Upload Release Asset
        id: upload-release-asset
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: policy.wasm
          asset_name: policy.wasm
          asset_content_type: application/wasm
